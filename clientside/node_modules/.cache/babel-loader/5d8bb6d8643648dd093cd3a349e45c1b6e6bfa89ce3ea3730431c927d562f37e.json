{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Desktop/Budgetting_App/budgetting_app/clientside/src/Components/TableView/ExpensesTable/index.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { connect } from 'react-redux';\nimport ProductTable from '../ProductTable';\nimport ProductRow from '../ProductRow';\nimport { updateExpenses, addToSumExpenses } from '../../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet id = 0;\nclass Products extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.state.filterText = \"\";\n    this.state.products = [{\n      id: 1,\n      name: '',\n      price: ''\n    }];\n  }\n  handleUserInput(filterText) {\n    this.setState({\n      filterText: filterText\n    });\n  }\n  handleRowDel(product) {\n    let index = this.state.products.indexOf(product);\n    this.state.products.splice(index, 1);\n    this.setState(this.state.products);\n  }\n  handleAddEvent(evt) {\n    let id = (+new Date() + Math.floor(Math.random() * 999999)).toString(36);\n    let product = {\n      id: id,\n      name: \"\",\n      price: \"\"\n    };\n    this.state.products.push(product);\n\n    // console.log(\"Updating state\")\n    console.log(this.state.products[this.state.products.length - 2]); //gets the last added task\n\n    this.props.updateExpenses(this.state.products[this.state.products.length - 2]); //adds new value\n\n    this.setState(this.state.products);\n    this.props.addToSumExpenses(parseInt(this.state.products[this.state.products.length - 2].price));\n  }\n  handleProductTable(evt) {\n    let item = {\n      id: evt.target.id,\n      name: evt.target.name,\n      value: evt.target.value\n    };\n    let products = this.state.products.slice();\n    let newProducts = products.map(function (product) {\n      for (var key in product) {\n        if (key == item.name && product.id == item.id) {\n          product[key] = item.value;\n        }\n      }\n      return product;\n    });\n    this.setState({\n      products: newProducts\n    });\n    // this.props.updateExpenses(this.state.products)\n  }\n\n  render() {\n    const handleClick = evt => {\n      if (evt.which === 13) {\n        this.handleAddEvent(evt);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onKeyDown: handleClick,\n      children: /*#__PURE__*/_jsxDEV(ProductTable, {\n        onProductTableUpdate: this.handleProductTable.bind(this),\n        onRowAdd: this.handleAddEvent.bind(this),\n        onRowDel: this.handleRowDel.bind(this),\n        products: this.state.products,\n        filterText: this.state.filterText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    expensesSum: state.expensesSum.total\n  };\n};\nexport default connect(mapStateToProps, {\n  updateExpenses,\n  addToSumExpenses\n})(Products);","map":{"version":3,"names":["React","render","connect","ProductTable","ProductRow","updateExpenses","addToSumExpenses","id","Products","Component","constructor","props","state","filterText","products","name","price","handleUserInput","setState","handleRowDel","product","index","indexOf","splice","handleAddEvent","evt","Date","Math","floor","random","toString","push","console","log","length","parseInt","handleProductTable","item","target","value","slice","newProducts","map","key","handleClick","which","bind","mapStateToProps","expensesSum","total"],"sources":["/Users/danny/Desktop/Budgetting_App/budgetting_app/clientside/src/Components/TableView/ExpensesTable/index.js"],"sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport { connect } from 'react-redux'\n\nimport ProductTable from '../ProductTable'\n\nimport ProductRow from '../ProductRow'\n\n\n\nimport { updateExpenses , addToSumExpenses  } from '../../../actions'\n\nlet id = 0\n\nclass Products extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.state.filterText = \"\";\n    this.state.products = [  { id: 1, name: '', price: '' } ];\n\n  }\n  handleUserInput(filterText) {\n    this.setState({filterText: filterText});\n  };\n\n  handleRowDel(product) {\n    let index = this.state.products.indexOf(product);\n    this.state.products.splice(index, 1);\n    this.setState(this.state.products);\n  };\n\n  handleAddEvent(evt) {\n    let id = (+ new Date() + Math.floor(Math.random() * 999999)).toString(36);\n    let product = { id: id, name: \"\", price: \"\" }\n    this.state.products.push(product);\n\n    // console.log(\"Updating state\")\n    console.log(this.state.products[this.state.products.length-2]) //gets the last added task\n\n    this.props.updateExpenses(this.state.products[this.state.products.length-2]) //adds new value\n\n    this.setState(this.state.products);\n\n    this.props.addToSumExpenses( parseInt(this.state.products[this.state.products.length-2].price ))\n\n\n  }\n\n  handleProductTable(evt) {\n    let item = { id: evt.target.id, name: evt.target.name, value: evt.target.value };\n    let products = this.state.products.slice();\n    let newProducts = products.map(function(product) {\n\n    for (var key in product) {\n      if (key == item.name && product.id == item.id) {\n        product[key] = item.value;\n\n      }\n    }\n    return product;\n  });\n    this.setState({products:newProducts});\n    // this.props.updateExpenses(this.state.products)\n  };\n  render() {\n\n    const handleClick = (evt)=> { if (evt.which === 13) { this.handleAddEvent(evt) } }\n\n    return (\n      <div onKeyDown={handleClick}>\n        <ProductTable onProductTableUpdate={this.handleProductTable.bind(this)} onRowAdd={this.handleAddEvent.bind(this)} onRowDel={this.handleRowDel.bind(this)} products={this.state.products} filterText={this.state.filterText}/>\n      </div>\n    );\n\n  }\n\n}\n\n\nconst mapStateToProps = (state) => {\n  return {expensesSum : state.expensesSum.total}\n}\n\nexport default connect( mapStateToProps, { updateExpenses, addToSumExpenses  }  )(Products)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}