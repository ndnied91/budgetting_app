{"ast":null,"code":"const INITIAL_STATE = {\n  price: 0,\n  name: ''\n};\n\n//\n// export default function(state= INITIAL_STATE , action){\n//   switch(action.type){\n//     case 'EXPENSES':\n//         return action.payload\n//     default:\n//       return state\n//   }\n// }\n//\n\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let todos = [];\n  switch (action.type) {\n    // case 'EXPENSES':\n    // return action.payload\n\n    case 'INSERT_TODO':\n      {\n        const newArray = [...state.todos]; //Copying state array\n        newArray.splice(2, 0, action.payload);\n        //using splice to insert at an index\n        return {\n          ...state,\n          todos: newArray //reassigning todos array to new array\n        };\n      }\n\n    case 'DELETE_TODO':\n      return {\n        // returning a copy of orignal state\n        ...state,\n        //copying the original state\n        todos: state.todos.filter(todo => todo.id !== action.payload)\n        // returns a new filtered todos array\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["INITIAL_STATE","price","name","state","action","todos","type","newArray","splice","payload","filter","todo","id"],"sources":["/Users/danny/Desktop/Budgetting_App/budgetting_app/clientside/src/reducers/expensesReducer.js"],"sourcesContent":["\nconst INITIAL_STATE = {\n  price: 0,\n  name : ''\n}\n\n//\n// export default function(state= INITIAL_STATE , action){\n//   switch(action.type){\n//     case 'EXPENSES':\n//         return action.payload\n//     default:\n//       return state\n//   }\n// }\n//\n\n\n\nexport default function(state= [] , action){\n\nlet todos = []\n\n  switch(action.type){\n    // case 'EXPENSES':\n        // return action.payload\n\n      case 'INSERT_TODO': {\n         const newArray = [...state.todos]; //Copying state array\n         newArray.splice(2, 0, action.payload);\n         //using splice to insert at an index\n        return {\n         ...state,\n         todos: newArray //reassigning todos array to new array\n         }\n        }\n\n    case 'DELETE_TODO':\n     return {  // returning a copy of orignal state\n      ...state, //copying the original state\n      todos: state.todos.filter(todo => todo.id !== action.payload)\n                                 // returns a new filtered todos array\n       }\n\n    default:\n      return state\n  }\n}\n"],"mappings":"AACA,MAAMA,aAAa,GAAG;EACpBC,KAAK,EAAE,CAAC;EACRC,IAAI,EAAG;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,eAAe,YAA4B;EAAA,IAAnBC,KAAK,uEAAE,EAAE;EAAA,IAAGC,MAAM;EAE1C,IAAIC,KAAK,GAAG,EAAE;EAEZ,QAAOD,MAAM,CAACE,IAAI;IAChB;IACI;;IAEF,KAAK,aAAa;MAAE;QACjB,MAAMC,QAAQ,GAAG,CAAC,GAAGJ,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;QACnCE,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAEJ,MAAM,CAACK,OAAO,CAAC;QACrC;QACD,OAAO;UACN,GAAGN,KAAK;UACRE,KAAK,EAAEE,QAAQ,CAAC;QAChB,CAAC;MACF;;IAEJ,KAAK,aAAa;MACjB,OAAO;QAAG;QACT,GAAGJ,KAAK;QAAE;QACVE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKR,MAAM,CAACK,OAAO;QACjC;MAC1B,CAAC;;IAEJ;MACE,OAAON,KAAK;EAAA;AAElB"},"metadata":{},"sourceType":"module","externalDependencies":[]}