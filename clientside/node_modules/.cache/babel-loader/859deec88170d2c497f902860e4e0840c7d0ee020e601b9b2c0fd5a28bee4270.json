{"ast":null,"code":"//\n// const INITIAL_STATE = {\n//   price: 0,\n//   name : ''\n// }\n\n//\n// export default function(state= INITIAL_STATE , action){\n//   switch(action.type){\n//     case 'EXPENSES':\n//         return action.payload\n//     default:\n//       return state\n//   }\n// }\n//\n\nconst INITIAL_STATE = {\n  todos: [{\n    username: \"test\",\n    id: 1,\n    title: \"Eat\",\n    completed: true\n  }, {\n    username: \"test\",\n    id: 2,\n    title: \"Code\",\n    completed: false\n  }, {\n    username: \"test\",\n    id: 3,\n    title: \"Sleep\",\n    completed: false\n  }]\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let arr = [];\n  switch (action.type) {\n    case 'INSERT_TODO':\n      {\n        const newArray = [...state.todos]; //Copying state array\n        newArray.splice(2, 0, action.payload);\n        //using splice to insert at an index\n        return {\n          ...state,\n          todos: newArray //reassigning todos array to new array\n        };\n      }\n\n    case 'DELETE_TODO':\n      return {\n        // returning a copy of orignal state\n        ...state,\n        //copying the original state\n        todos: state.todos.filter(todo => todo.id !== action.payload)\n        // returns a new filtered todos array\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["INITIAL_STATE","todos","username","id","title","completed","state","action","arr","type","newArray","splice","payload","filter","todo"],"sources":["/Users/danny/Desktop/Budgetting_App/budgetting_app/clientside/src/reducers/expensesReducer.js"],"sourcesContent":["//\n// const INITIAL_STATE = {\n//   price: 0,\n//   name : ''\n// }\n\n//\n// export default function(state= INITIAL_STATE , action){\n//   switch(action.type){\n//     case 'EXPENSES':\n//         return action.payload\n//     default:\n//       return state\n//   }\n// }\n//\n\n\nconst INITIAL_STATE = {\ntodos: [\n  {\n   username: \"test\",\n   id: 1,\n   title: \"Eat\",\n   completed: true\n  },\n  {\n   username: \"test\",\n   id: 2,\n   title: \"Code\",\n   completed: false\n  },\n  {\n   username: \"test\",\n   id: 3,\n   title: \"Sleep\",\n   completed: false\n  }\n ]\n};\n\n\n\nexport default function(state= INITIAL_STATE , action){\n\nlet arr = []\n\n  switch(action.type){\n\n      case 'INSERT_TODO': {\n         const newArray = [...state.todos]; //Copying state array\n         newArray.splice(2, 0, action.payload);\n         //using splice to insert at an index\n        return {\n         ...state,\n         todos: newArray //reassigning todos array to new array\n         }\n        }\n\n    case 'DELETE_TODO':\n     return {  // returning a copy of orignal state\n      ...state, //copying the original state\n      todos: state.todos.filter(todo => todo.id !== action.payload)\n                                 // returns a new filtered todos array\n       }\n\n    default:\n      return state\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMA,aAAa,GAAG;EACtBC,KAAK,EAAE,CACL;IACCC,QAAQ,EAAE,MAAM;IAChBC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,KAAK;IACZC,SAAS,EAAE;EACZ,CAAC,EACD;IACCH,QAAQ,EAAE,MAAM;IAChBC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE;EACZ,CAAC,EACD;IACCH,QAAQ,EAAE,MAAM;IAChBC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE;EACZ,CAAC;AAEH,CAAC;AAID,eAAe,YAAuC;EAAA,IAA9BC,KAAK,uEAAEN,aAAa;EAAA,IAAGO,MAAM;EAErD,IAAIC,GAAG,GAAG,EAAE;EAEV,QAAOD,MAAM,CAACE,IAAI;IAEd,KAAK,aAAa;MAAE;QACjB,MAAMC,QAAQ,GAAG,CAAC,GAAGJ,KAAK,CAACL,KAAK,CAAC,CAAC,CAAC;QACnCS,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAEJ,MAAM,CAACK,OAAO,CAAC;QACrC;QACD,OAAO;UACN,GAAGN,KAAK;UACRL,KAAK,EAAES,QAAQ,CAAC;QAChB,CAAC;MACF;;IAEJ,KAAK,aAAa;MACjB,OAAO;QAAG;QACT,GAAGJ,KAAK;QAAE;QACVL,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACY,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACX,EAAE,KAAKI,MAAM,CAACK,OAAO;QACjC;MAC1B,CAAC;;IAEJ;MACE,OAAON,KAAK;EAAA;AAElB"},"metadata":{},"sourceType":"module","externalDependencies":[]}